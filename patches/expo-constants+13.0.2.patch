diff --git a/node_modules/expo-constants/ios/EXConstants.podspec b/node_modules/expo-constants/ios/EXConstants.podspec
index c45ac48..f9e2c65 100644
--- a/node_modules/expo-constants/ios/EXConstants.podspec
+++ b/node_modules/expo-constants/ios/EXConstants.podspec
@@ -10,18 +10,18 @@ Pod::Spec.new do |s|
   s.license        = package['license']
   s.author         = package['author']
   s.homepage       = package['homepage']
-  s.platform       = :ios, '12.0'
+  s.platforms     = {:ios => '12.0', :tvos => '12.0'}
   s.source         = { git: 'https://github.com/expo/expo.git' }
   s.static_framework = true
 
   s.dependency 'ExpoModulesCore'
 
-  if !$ExpoUseSources&.include?(package['name']) && ENV['EXPO_USE_SOURCE'].to_i == 0 && File.exist?("#{s.name}.xcframework") && Gem::Version.new(Pod::VERSION) >= Gem::Version.new('1.10.0')
-    s.source_files = "#{s.name}/**/*.h"
-    s.vendored_frameworks = "#{s.name}.xcframework"
-  else
+  # if !$ExpoUseSources&.include?(package['name']) && ENV['EXPO_USE_SOURCE'].to_i == 0 && File.exist?("#{s.name}.xcframework") && Gem::Version.new(Pod::VERSION) >= Gem::Version.new('1.10.0')
+  #   s.source_files = "#{s.name}/**/*.h"
+  #   s.vendored_frameworks = "#{s.name}.xcframework"
+  # else
     s.source_files = "#{s.name}/**/*.{h,m}"
-  end
+  # end
 
   s.script_phase = {
     :name => 'Generate app.config for prebuilt Constants.manifest',
diff --git a/node_modules/expo-constants/ios/EXConstants/EXConstants.m b/node_modules/expo-constants/ios/EXConstants/EXConstants.m
index 81267ea..3bbe5bd 100644
--- a/node_modules/expo-constants/ios/EXConstants/EXConstants.m
+++ b/node_modules/expo-constants/ios/EXConstants/EXConstants.m
@@ -3,10 +3,14 @@
 #import <EXConstants/EXConstants.h>
 #import <ExpoModulesCore/EXConstantsInterface.h>
 
+#if !TARGET_OS_TV
 #import <WebKit/WKWebView.h>
+#endif
 
 @interface EXConstants () {
+#if !TARGET_OS_TV
   WKWebView *webView;
+#endif
 }
 
 @property (nonatomic, strong) NSString *webViewUserAgent;
@@ -37,6 +41,9 @@ - (NSDictionary *)constantsToExport
                     getWebViewUserAgentWithResolver:(EXPromiseResolveBlock)resolve
                     rejecter:(EXPromiseRejectBlock)reject)
 {
+#if TARGET_OS_TV
+    reject(@"ERR_NOT_ON_TVOS",@"Not on TVOS",@"Not on TVOS");
+#else
   __weak EXConstants *weakSelf = self;
   dispatch_async(dispatch_get_main_queue(), ^{
     __strong EXConstants *strongSelf = weakSelf;
@@ -61,6 +68,7 @@ - (NSDictionary *)constantsToExport
       }
     }
   });
+#endif
 }
 
 @end
diff --git a/node_modules/expo-constants/ios/EXConstants/EXConstantsService.m b/node_modules/expo-constants/ios/EXConstants/EXConstantsService.m
index 731a870..c8163d3 100644
--- a/node_modules/expo-constants/ios/EXConstants/EXConstantsService.m
+++ b/node_modules/expo-constants/ios/EXConstants/EXConstantsService.m
@@ -90,11 +90,15 @@ - (NSString *)buildVersion
 
 - (CGFloat)statusBarHeight
 {
+#if TARGET_OS_TV
+    return 0;
+#else
   __block CGSize statusBarSize;
   [EXUtilities performSynchronouslyOnMainThread:^{
     statusBarSize = [UIApplication sharedApplication].statusBarFrame.size;
   }];
   return MIN(statusBarSize.width, statusBarSize.height);
+#endif
 }
 
 - (NSString *)iosVersion
